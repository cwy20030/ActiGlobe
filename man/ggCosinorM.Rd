% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggCosinorM.R
\name{ggCosinorM}
\alias{ggCosinorM}
\title{Plot `CosinorM` Fit with `ggplot2`}
\usage{
ggCosinorM(
  object,
  labels = TRUE,
  ci = TRUE,
  ci_level = 0.95,
  n = 400,
  point_size = 0.5,
  title_extra = NULL,
  ...
)
}
\arguments{
\item{object}{A fitted model of class [CosinorM()]}

\item{labels}{Logical; Default `TRUE` places repelled labels on the plot with MESOR, amplitude(s), and acrophase(s).}

\item{ci}{Logical; Default `TRUE` computes and draws pointwise parametric confidence bands for the fitted cosinor curve using the model covariance.}

\item{ci_level}{Confidence level for the pointwise bands, expressed in numeric value between 0 and 1.}

\item{n}{Integer; number of points on the fine prediction grid used to draw the fitted cosinor and confidence ribbon. (default to `400`)}

\item{point_size}{Numeric; plotting size for observed points. (default: `0.5`)}

\item{title_extra}{Optional character string appended to the plot title for extra context.}

\item{...}{Additional arguments (currently ignored) kept for generic compatibility.}
}
\description{
Create visualization of a CosinorM model fit using ggplot2. The plot shows the parametric cosinor fit over a fine time grid, optional pointwise confidence bands, observed data points, MESOR line, acrophase verticals, amplitude annotation segments, and labelled parameter values when requested.
}
\examples{
\dontrun{
# Import data
FlyEast

BdfList =
BriefSum(df = FlyEast ,
         SR = 1/60,
         Start = "2017-10-24 13:45:00")

# Let's extract actigraphy data from a single day
df <- BdfList$df
df <- subset(df, df$Date == "2017-10-27")

fit <- CosinorM(time = df$Time,
                activity = df$Activity,
                tau = 24,
                method = "OLS")


p <- ggCosinorM(fit,
                labels = TRUE,
                ci = TRUE,
                ci_level = 0.95,
                title_extra = "2017-10-24")
print(p)
}

}
\seealso{
[ggplot2::ggplot()], [ggrepel::geom_label_repel()], [stats::predict()]
}
